{
  "name": "confirmer",
  "type": "registry:ui",
  "dependencies": [
    "use-ask"
  ],
  "registryDependencies": [
    "alert-dialog",
    "button"
  ],
  "files": [
    {
      "path": "ui/confirmer.tsx",
      "content": "\"use client\"\n\nimport { createAsk } from \"use-ask\"\n\nimport {\n  AlertDialog,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/registry/new-york/ui/alert-dialog\"\nimport { Button } from \"@/registry/new-york/ui/button\"\n\nconst [confirmStore, useConfirmStore] = createAsk<ConfirmOptions, boolean>({})\n\nexport const confirm = confirmStore.ask\n\nexport const safeConfirm = confirmStore.safeAsk\n\ninterface ConfirmOptions {\n  title?: React.ReactNode\n  description?: React.ReactNode\n  cancelText?: React.ReactNode\n  actionText?: React.ReactNode\n  CancelProps?: React.ComponentProps<typeof AlertDialogCancel>\n  ActionProps?: React.ComponentProps<typeof Button>\n}\n\nconst defaultOptions = {\n  title: \"Are you sure?\",\n  cancelText: \"Cancel\",\n  actionText: \"Continue\",\n} as const satisfies ConfirmOptions\n\nexport const Confirmer = () => {\n  const [{ key, payload }, { asking, cancel, ok }] = useConfirmStore()\n\n  const options = { ...defaultOptions, ...payload }\n\n  return (\n    <AlertDialog\n      key={key}\n      open={asking}\n      onOpenChange={(open) => !open && cancel()}\n    >\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>{options.title}</AlertDialogTitle>\n        </AlertDialogHeader>\n        <AlertDialogDescription>{options.description}</AlertDialogDescription>\n        <AlertDialogFooter>\n          <AlertDialogCancel {...options.CancelProps}>\n            {options.cancelText}\n          </AlertDialogCancel>\n          <Button {...options.ActionProps} onClick={() => ok(true)}>\n            {options.actionText}\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  )\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}