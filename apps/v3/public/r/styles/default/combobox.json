{
  "name": "combobox",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registryDependencies": [
    "badge",
    "combobox-primitive",
    "input-base"
  ],
  "files": [
    {
      "path": "ui/combobox.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slottable } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\nimport { Check, ChevronsUpDown, Loader, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { badgeVariants } from \"@/registry/default/ui/badge\"\nimport * as ComboboxPrimitive from \"@/registry/default/ui/combobox-primitive\"\nimport {\n  InputBase,\n  InputBaseAdornmentButton,\n  InputBaseControl,\n  InputBaseFlexWrapper,\n  InputBaseInput,\n} from \"@/registry/default/ui/input-base\"\n\nexport const Combobox = ComboboxPrimitive.Root\n\nconst ComboboxInputBase = React.forwardRef<\n  React.ElementRef<typeof InputBase>,\n  React.ComponentPropsWithoutRef<typeof InputBase>\n>(({ children, ...props }, ref) => (\n  <ComboboxPrimitive.Anchor asChild>\n    <InputBase ref={ref} {...props}>\n      {children}\n      <ComboboxPrimitive.Clear asChild>\n        <InputBaseAdornmentButton>\n          <X />\n        </InputBaseAdornmentButton>\n      </ComboboxPrimitive.Clear>\n      <ComboboxPrimitive.Trigger asChild>\n        <InputBaseAdornmentButton>\n          <ChevronsUpDown />\n        </InputBaseAdornmentButton>\n      </ComboboxPrimitive.Trigger>\n    </InputBase>\n  </ComboboxPrimitive.Anchor>\n))\nComboboxInputBase.displayName = \"ComboboxInputBase\"\n\nexport const ComboboxInput = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Input>\n>((props, ref) => (\n  <ComboboxInputBase>\n    <InputBaseControl>\n      <ComboboxPrimitive.Input asChild>\n        <InputBaseInput ref={ref} {...props} />\n      </ComboboxPrimitive.Input>\n    </InputBaseControl>\n  </ComboboxInputBase>\n))\nComboboxInput.displayName = \"ComboboxInput\"\n\nexport const ComboboxTagsInput = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Input>\n>(({ children, ...props }, ref) => (\n  <ComboboxInputBase>\n    <ComboboxPrimitive.ComboboxTagGroup asChild>\n      <InputBaseFlexWrapper className=\"flex items-center gap-2\">\n        {children}\n        <InputBaseControl>\n          <ComboboxPrimitive.Input asChild>\n            <InputBaseInput ref={ref} {...props} />\n          </ComboboxPrimitive.Input>\n        </InputBaseControl>\n      </InputBaseFlexWrapper>\n    </ComboboxPrimitive.ComboboxTagGroup>\n  </ComboboxInputBase>\n))\nComboboxTagsInput.displayName = \"ComboboxTagsInput\"\n\nexport const ComboboxTag = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.ComboboxTagGroupItem>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.ComboboxTagGroupItem>\n>(({ children, className, ...props }, ref) => (\n  <ComboboxPrimitive.ComboboxTagGroupItem\n    ref={ref}\n    className={cn(\n      badgeVariants({ variant: \"outline\" }),\n      \"group gap-1 pr-1.5 data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <Slottable>{children}</Slottable>\n    <ComboboxPrimitive.ComboboxTagGroupItemRemove className=\"group-data-[disabled]:pointer-events-none\">\n      <X className=\"size-4\" />\n      <span className=\"sr-only\">Remove</span>\n    </ComboboxPrimitive.ComboboxTagGroupItemRemove>\n  </ComboboxPrimitive.ComboboxTagGroupItem>\n))\nComboboxTag.displayName = \"ComboboxTag\"\n\nexport const ComboboxContent = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Content>\n>(({ className, align = \"center\", alignOffset = 4, ...props }, ref) => (\n  <ComboboxPrimitive.Portal>\n    <ComboboxPrimitive.Content\n      ref={ref}\n      align={align}\n      alignOffset={alignOffset}\n      className={cn(\n        \"relative z-50 max-h-96 w-[--radix-popover-trigger-width] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ComboboxPrimitive.Portal>\n))\nComboboxContent.displayName = \"ComboboxContent\"\n\nexport const ComboboxEmpty = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Empty>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Empty\n    ref={ref}\n    className={cn(\"py-6 text-center text-sm\", className)}\n    {...props}\n  />\n))\nComboboxEmpty.displayName = \"ComboboxEmpty\"\n\nexport const ComboboxLoading = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Loading>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Loading>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Loading\n    ref={ref}\n    className={cn(\"flex items-center justify-center px-1.5 py-2\", className)}\n    {...props}\n  >\n    <Loader className=\"size-4 animate-spin [mask:conic-gradient(transparent_45deg,_white)]\" />\n  </ComboboxPrimitive.Loading>\n))\nComboboxLoading.displayName = \"ComboboxLoading\"\n\nexport const ComboboxGroup = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-sm [&_[cmdk-group-heading]]:font-semibold\",\n      className\n    )}\n    {...props}\n  />\n))\nComboboxGroup.displayName = \"ComboboxGroup\"\n\nconst ComboboxSeparator = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ComboboxPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nComboboxSeparator.displayName = \"ComboboxSeparator\"\n\nexport const comboboxItemStyle = cva(\n  \"relative flex w-full cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\"\n)\n\nexport const ComboboxItem = React.forwardRef<\n  React.ElementRef<typeof ComboboxPrimitive.Item>,\n  Omit<\n    React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.Item>,\n    \"children\"\n  > &\n    Pick<\n      React.ComponentPropsWithoutRef<typeof ComboboxPrimitive.ItemText>,\n      \"children\"\n    >\n>(({ className, children, ...props }, ref) => (\n  <ComboboxPrimitive.Item\n    ref={ref}\n    className={cn(comboboxItemStyle(), className)}\n    {...props}\n  >\n    <ComboboxPrimitive.ItemText>{children}</ComboboxPrimitive.ItemText>\n    <ComboboxPrimitive.ItemIndicator className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n      <Check className=\"size-4\" />\n    </ComboboxPrimitive.ItemIndicator>\n  </ComboboxPrimitive.Item>\n))\nComboboxItem.displayName = \"ComboboxItem\"\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}