{
  "name": "password-input-primitive",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/primitive",
    "@radix-ui/react-primitive",
    "@radix-ui/react-use-controllable-state"
  ],
  "files": [
    {
      "path": "ui/password-input-primitive.tsx",
      "content": "import * as React from \"react\"\nimport { composeEventHandlers } from \"@radix-ui/primitive\"\nimport { Primitive } from \"@radix-ui/react-primitive\"\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\"\n\nexport type PasswordInputContextProps = Required<\n  Pick<PasswordInputProps, \"visible\" | \"onVisibleChange\">\n>\n\nconst PasswordInputContext = React.createContext<PasswordInputContextProps>({\n  visible: false,\n  onVisibleChange: () => {},\n})\n\nexport const usePasswordInputContext = () =>\n  React.useContext(PasswordInputContext)\n\nexport interface PasswordInputProps {\n  visible?: boolean\n  defaultVisible?: boolean\n  onVisibleChange?: (visible: boolean) => void\n  children?: React.ReactNode\n}\n\nconst PasswordInput = ({\n  visible: visibleProp,\n  defaultVisible,\n  onVisibleChange,\n  children,\n}: PasswordInputProps) => {\n  const [visible = false, setVisible] = useControllableState({\n    prop: visibleProp,\n    defaultProp: defaultVisible,\n    onChange: onVisibleChange,\n  })\n\n  return (\n    <PasswordInputContext.Provider\n      value={{\n        visible,\n        onVisibleChange: setVisible,\n      }}\n    >\n      {children}\n    </PasswordInputContext.Provider>\n  )\n}\nPasswordInput.displayName = \"PasswordInput\"\n\nconst PasswordInputInput = React.forwardRef<\n  React.ElementRef<typeof Primitive.input>,\n  React.ComponentPropsWithoutRef<typeof Primitive.input>\n>((props, ref) => {\n  const { visible } = usePasswordInputContext()\n\n  return (\n    <Primitive.input\n      ref={ref}\n      type={visible ? \"text\" : \"password\"}\n      {...props}\n    />\n  )\n})\nPasswordInputInput.displayName = \"PasswordInputInput\"\n\nconst PasswordInputToggle = React.forwardRef<\n  React.ElementRef<typeof Primitive.button>,\n  React.ComponentPropsWithoutRef<typeof Primitive.button>\n>(({ onClick, ...props }, ref) => {\n  const { visible, onVisibleChange } = usePasswordInputContext()\n\n  return (\n    <Primitive.button\n      ref={ref}\n      type=\"button\"\n      data-state={visible ? \"visible\" : \"hidden\"}\n      onClick={composeEventHandlers(onClick, () => onVisibleChange(!visible))}\n      {...props}\n    />\n  )\n})\nPasswordInputToggle.displayName = \"PasswordInputToggle\"\n\nconst PasswordInputIndicator = React.forwardRef<\n  React.ElementRef<typeof Primitive.span>,\n  React.ComponentPropsWithoutRef<typeof Primitive.span>\n>((props, ref) => {\n  const { visible } = usePasswordInputContext()\n\n  return (\n    <Primitive.span\n      ref={ref}\n      aria-hidden=\"true\"\n      data-state={visible ? \"visible\" : \"hidden\"}\n      {...props}\n    />\n  )\n})\nPasswordInputIndicator.displayName = \"PasswordInputIndicator\"\n\nconst Root = PasswordInput\nconst Input = PasswordInputInput\nconst Toggle = PasswordInputToggle\nconst Indicator = PasswordInputIndicator\n\nexport { Root, Input, Toggle, Indicator }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}