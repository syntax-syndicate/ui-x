{
  "name": "file-list",
  "type": "registry:ui",
  "dependencies": [
    "pretty-bytes"
  ],
  "registryDependencies": [
    "button",
    "progress"
  ],
  "files": [
    {
      "path": "ui/file-list.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { FileText } from \"lucide-react\"\nimport prettyBytes from \"pretty-bytes\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Progress } from \"@/registry/default/ui/progress\"\n\nexport const FileList = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"grid gap-4\", className)} {...props} />\n))\nFileList.displayName = \"FileList\"\n\nexport const FileListItem = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"grid gap-4 rounded-lg border bg-card p-4 text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nFileListItem.displayName = \"FileListItem\"\n\nexport const FileListHeader = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center gap-4\", className)}\n    {...props}\n  />\n))\nFileListHeader.displayName = \"FileListHeader\"\n\nexport const FileListIcon = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"flex size-10 items-center justify-center rounded-lg border bg-muted text-muted-foreground [&>svg]:size-5\",\n      className\n    )}\n    {...props}\n  >\n    {children ?? <FileText />}\n  </div>\n))\nFileListIcon.displayName = \"FileListIcon\"\n\nexport const FileListInfo = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"grid flex-1 gap-1\", className)} {...props} />\n))\nFileListInfo.displayName = \"FileListInfo\"\n\nexport const FileListName = React.forwardRef<\n  React.ElementRef<\"p\">,\n  React.ComponentPropsWithoutRef<\"p\">\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nFileListName.displayName = \"FileListName\"\n\nexport const FileListDescription = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"flex items-center gap-2 text-xs text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nFileListDescription.displayName = \"FileListDescription\"\n\nexport const FileListDescriptionSeparator = React.forwardRef<\n  React.ElementRef<\"span\">,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ children, ...props }, ref) => (\n  <span ref={ref} {...props}>\n    {children ?? \"â€¢\"}\n  </span>\n))\nFileListDescriptionSeparator.displayName = \"FileListDescriptionSeparator\"\n\nexport interface FileListSizeProps\n  extends React.ComponentPropsWithoutRef<\"span\"> {\n  children: number\n}\n\nexport const FileListSize = React.forwardRef<\n  React.ElementRef<\"span\">,\n  FileListSizeProps\n>(({ children, ...props }, ref) => (\n  <span ref={ref} {...props}>\n    {prettyBytes(children)}\n  </span>\n))\nFileListSize.displayName = \"FileListSize\"\n\nexport const FileListProgress = React.forwardRef<\n  React.ElementRef<typeof Progress>,\n  React.ComponentPropsWithoutRef<typeof Progress>\n>(({ className, ...props }, ref) => (\n  <Progress ref={ref} className={cn(\"h-2\", className)} {...props} />\n))\nFileListProgress.displayName = \"FileListProgress\"\n\nexport const FileListDescriptionText = React.forwardRef<\n  React.ElementRef<\"span\">,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    className={cn(\"flex items-center gap-1.5 [&>svg]:size-3\", className)}\n    {...props}\n  />\n))\nFileListDescriptionText.displayName = \"FileListDescriptionText\"\n\nexport const FileListContent = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>((props, ref) => <div ref={ref} {...props} />)\nFileListContent.displayName = \"FileListContent\"\n\nexport const FileListActions = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center gap-2\", className)}\n    {...props}\n  />\n))\nFileListActions.displayName = \"FileListActions\"\n\nexport const FileListAction = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => (\n  <Button\n    ref={ref}\n    variant={variant}\n    size={size}\n    className={cn(\"size-7 [&_svg]:size-3.5\", className)}\n    {...props}\n  />\n))\nFileListAction.displayName = \"FileListAction\"\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}